<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
  <duplication lines="83" tokens="129">
    <file path="/metrics/Silex/src/Silex/Controller.php" line="34"/>
    <file path="/metrics/Silex/src/Silex/ControllerDuplicated.php" line="34"/>
    <codefragment>    private $route;
    private $routeName;
    private $isFrozen = false;

    /**
     * Constructor.
     *
     * @param Route $route
     */
    public function __construct(Route $route)
    {
        $this-&gt;route = $route;
    }

    /**
     * Gets the controller's route.
     *
     * @return Route
     */
    public function getRoute()
    {
        return $this-&gt;route;
    }

    /**
     * Gets the controller's route name.
     *
     * @return string
     */
    public function getRouteName()
    {
        return $this-&gt;routeName;
    }

    /**
     * Sets the controller's route.
     *
     * @param string $routeName
     *
     * @return Controller $this The current Controller instance
     */
    public function bind($routeName)
    {
        if ($this-&gt;isFrozen) {
            throw new ControllerFrozenException(sprintf('Calling %s on frozen %s instance.', __METHOD__, __CLASS__));
        }

        $this-&gt;routeName = $routeName;

        return $this;
    }

    public function __call($method, $arguments)
    {
        if (!method_exists($this-&gt;route, $method)) {
            throw new \BadMethodCallException(sprintf('Method "%s::%s" does not exist.', get_class($this-&gt;route), $method));
        }

        call_user_func_array(array($this-&gt;route, $method), $arguments);

        return $this;
    }

    /**
     * Freezes the controller.
     *
     * Once the controller is frozen, you can no longer change the route name
     */
    public function freeze()
    {
        $this-&gt;isFrozen = true;
    }

    public function generateRouteName($prefix)
    {
        $requirements = $this-&gt;route-&gt;getRequirements();
        $method = isset($requirements['_method']) ? $requirements['_method'] : '';

        $routeName = $prefix.$method.$this-&gt;route-&gt;getPath();
        $routeName = str_replace(array('/', ':', '|', '-'), '_', $routeName);
        $routeName = preg_replace('/[^a-z0-9A-Z_.]+/', '', $routeName);

        return $routeName;
</codefragment>
  </duplication>
</pmd-cpd>
